The `matrix_divided` function from `2-matrix_divided` module
===========================================================

Using `matrix_divided`
----------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing elements of a matrix:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing with different matrix dimensions:

    >>> matrix = [
    ...     [10, 20],
    ...     [30, 40],
    ...     [50, 60]
    ... ]
    >>> matrix_divided(matrix, 10)
    [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]

Handling non-numeric matrix elements:

    >>> matrix = [
    ...     [1, 2, "three"],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Handling rows of different sizes:

    >>> matrix = [
    ...     [1, 2],
    ...     [3, 4, 5]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Handling non-numeric divisor:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Handling division by zero:

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
