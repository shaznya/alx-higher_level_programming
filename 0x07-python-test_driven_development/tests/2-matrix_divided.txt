The `matrix_divided` function from `2-matrix_divided` module
==========================================================

Using `matrix_divided`
----------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing with a valid matrix and divisor:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Testing with another valid matrix and divisor:

    >>> matrix = [[10, 20], [30, 40]]
    >>> matrix_divided(matrix, 10)
    [[1.0, 2.0], [3.0, 4.0]]

Testing with non-numeric matrix elements:

    >>> matrix = [[1, 2], ["3", 4]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing with uneven row lengths:

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Testing with invalid divisor:

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, "2")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
